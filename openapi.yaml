openapi: 3.0.1
info:
  title: Callback API
  version: 1.0.0-SNAPSHOT
  description: Demo spec for documenting openapi functionality
servers:
  - url: "http://api:8080/v1"
  - url: "https://api.atrakic.dev/v1"
paths:
  /healthcheck:
    get:
      description: |
        This endpoint is used to check the health of the API. It should return
        a 200 OK response if the API is up and running.
      responses:
        '200':
          description: API is up and running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
  /callbacks:
    post:
      description: subscribes a client to receive out-of-band data
      parameters:
        - name: callbackUrl
          in: query
          required: true
          description: |
            the location where data will be sent.  Must be network accessible
            by the source server
          schema:
            type: string
            format: uri
            example: http://server/foo/bar
      responses:
        '201':
          description: subscription successfully created
          content:
            application/json:
              schema:
                description: subscription information
                required:
                  - subscriptionId
                properties:
                  subscriptionId:
                    description: this unique identifier allows management of the subscription
                    type: string
                    example: 2531329f-fb09-4ef7-887e-84e648214436
      callbacks:
        onData:
          '{$request.query.callbackUrl}/data':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/NewNotificationData'
              responses:
                '202':
                  description: |
                    Your server implementation should return this HTTP status code
                    if the data was received successfully
                '204':
                  description: |
                    Your server should return this HTTP status code if no longer interested
                    in further updates
            delete:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DeleteNotificationData'
              responses:
                '202':
                  description: |
                    Your server implementation should return this HTTP status code
                    if the data was received successfully
                '204':
                  description: |
                    Your server should return this HTTP status code if no longer interested
                    in further updates
          '{$request.query.callbackUrl}/test': {}
        dummy: {}
components:
  schemas:
    NewNotificationData:
      description: subscription payload
      properties:
        timestamp:
          type: string
          format: date-time
        userData:
          type: string
    DeleteNotificationData:
      description: subscription payload
      properties:
        timestamp:
          type: string
          format: date-time
