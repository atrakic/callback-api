from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class NewNotificationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp=None, user_data=None):  # noqa: E501
        """NewNotificationData - a model defined in OpenAPI

        :param timestamp: The timestamp of this NewNotificationData.  # noqa: E501
        :type timestamp: datetime
        :param user_data: The user_data of this NewNotificationData.  # noqa: E501
        :type user_data: str
        """
        self.openapi_types = {
            'timestamp': datetime,
            'user_data': str
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'user_data': 'userData'
        }

        self._timestamp = timestamp
        self._user_data = user_data

    @classmethod
    def from_dict(cls, dikt) -> 'NewNotificationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NewNotificationData of this NewNotificationData.  # noqa: E501
        :rtype: NewNotificationData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this NewNotificationData.


        :return: The timestamp of this NewNotificationData.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this NewNotificationData.


        :param timestamp: The timestamp of this NewNotificationData.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def user_data(self) -> str:
        """Gets the user_data of this NewNotificationData.


        :return: The user_data of this NewNotificationData.
        :rtype: str
        """
        return self._user_data

    @user_data.setter
    def user_data(self, user_data: str):
        """Sets the user_data of this NewNotificationData.


        :param user_data: The user_data of this NewNotificationData.
        :type user_data: str
        """

        self._user_data = user_data
